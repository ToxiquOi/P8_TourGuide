apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
apply plugin: "io.swagger.core.v3.swagger-gradle-plugin"

group 'tourGuide'
version '1.0-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

sonar {
    properties {
        property "sonar.projectKey", "ToxiquOi_P8_TourGuide"
        property "sonar.organization", "toxiquoi"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.7.9")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.5.0.2730"
        classpath "io.swagger.core.v3:swagger-gradle-plugin:2.2.9"
    }
}

bootJar {
    baseName='tourGuide'
    version='1.0.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation group: 'org.javamoney', name: 'moneta', version: '1.3'
    implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'

    implementation name:'gpsUtil', ext:'jar'
    implementation name:'RewardCentral', ext:'jar'
    implementation name:'TripPricer', ext:'jar'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.testng:testng:7.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.9'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}
